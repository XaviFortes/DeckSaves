name: Dependency Updates

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

jobs:
  update-rust-dependencies:
    name: Update Rust Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-edit
        run: cargo install cargo-edit

      - name: Update Rust dependencies
        run: |
          # Update dependencies in all workspace members
          cargo update
          
          # Check for major version updates (manual review needed)
          cargo outdated --root-deps-only > rust-outdated.txt || true
          
          if [ -s rust-outdated.txt ]; then
            echo "Major Rust dependency updates available:"
            cat rust-outdated.txt
          fi

      - name: Check if changes were made
        id: rust-changes
        run: |
          if git diff --quiet Cargo.lock; then
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            echo "changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Create Pull Request for Rust updates
        if: steps.rust-changes.outputs.changes == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update Rust dependencies'
          title: 'chore: update Rust dependencies'
          body: |
            This PR updates Rust dependencies to their latest compatible versions.
            
            ## Changes
            - Updated `Cargo.lock` with latest compatible versions
            
            ## Testing
            - [ ] All tests pass
            - [ ] Application builds successfully
            - [ ] No breaking changes detected
            
            Generated by automated dependency update workflow.
          branch: chore/update-rust-deps
          delete-branch: true

  update-npm-dependencies:
    name: Update NPM Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Update NPM dependencies
        run: |
          # Update to latest compatible versions
          npm update
          
          # Check for major version updates
          npm outdated > npm-outdated.txt || true
          
          if [ -s npm-outdated.txt ]; then
            echo "Major NPM dependency updates available:"
            cat npm-outdated.txt
          fi

      - name: Check if changes were made
        id: npm-changes
        run: |
          if git diff --quiet package-lock.json; then
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            echo "changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Run tests after update
        if: steps.npm-changes.outputs.changes == 'true'
        run: |
          npm ci
          npm run build
          npm run test:unit || echo "No unit tests configured"

      - name: Create Pull Request for NPM updates
        if: steps.npm-changes.outputs.changes == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update NPM dependencies'
          title: 'chore: update NPM dependencies'
          body: |
            This PR updates NPM dependencies to their latest compatible versions.
            
            ## Changes
            - Updated `package-lock.json` with latest compatible versions
            
            ## Testing
            - [ ] Frontend builds successfully
            - [ ] All tests pass
            - [ ] No breaking changes detected
            
            Generated by automated dependency update workflow.
          branch: chore/update-npm-deps
          delete-branch: true

  security-updates:
    name: Security Updates
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-audit
        run: cargo install cargo-audit

      - name: Check for Rust security advisories
        run: |
          cargo audit --json > rust-audit.json || true
          
          if [ -s rust-audit.json ] && [ "$(cat rust-audit.json)" != "{\"vulnerabilities\":{},\"warnings\":{}}" ]; then
            echo "ðŸš¨ Rust security vulnerabilities found!"
            cargo audit
            echo "RUST_SECURITY=true" >> $GITHUB_ENV
          else
            echo "âœ… No Rust security vulnerabilities found"
            echo "RUST_SECURITY=false" >> $GITHUB_ENV
          fi

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Check for NPM security advisories
        run: |
          npm ci
          npm audit --audit-level=moderate --json > npm-audit.json || true
          
          if [ -s npm-audit.json ] && [ "$(jq '.metadata.vulnerabilities.total' npm-audit.json)" -gt 0 ]; then
            echo "ðŸš¨ NPM security vulnerabilities found!"
            npm audit
            echo "NPM_SECURITY=true" >> $GITHUB_ENV
          else
            echo "âœ… No NPM security vulnerabilities found"
            echo "NPM_SECURITY=false" >> $GITHUB_ENV
          fi

      - name: Create security issue
        if: env.RUST_SECURITY == 'true' || env.NPM_SECURITY == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const title = 'ðŸš¨ Security Vulnerabilities Detected';
            const body = `
            ## Security Alert
            
            Automated security scan has detected vulnerabilities in dependencies.
            
            ${process.env.RUST_SECURITY === 'true' ? '### Rust Dependencies\nSecurity vulnerabilities found in Rust dependencies. Run \`cargo audit\` for details.\n' : ''}
            ${process.env.NPM_SECURITY === 'true' ? '### NPM Dependencies\nSecurity vulnerabilities found in NPM dependencies. Run \`npm audit\` for details.\n' : ''}
            
            ## Action Required
            - Review the vulnerabilities
            - Update affected dependencies
            - Test the application
            - Deploy security updates
            
            Generated by automated security scan.
            `;
            
            // Check if issue already exists
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['security'],
              state: 'open'
            });
            
            const existingIssue = issues.data.find(issue => issue.title === title);
            
            if (!existingIssue) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: title,
                body: body,
                labels: ['security', 'bug', 'priority-high']
              });
            }
